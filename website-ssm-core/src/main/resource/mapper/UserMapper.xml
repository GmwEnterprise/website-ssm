<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cqut.chat.mapper.UserMapper">

  <resultMap id="userMap" type="cn.edu.cqut.chat.entity.User">
    <id property="id" column="id"/>
    <result property="createTime" column="create_time"/>
    <result property="lastModifiedTime" column="last_modified_time"/>
    <result property="remark" column="remark"/>
    <result property="account" column="account"/>
    <result property="password" column="password"/>
    <result property="phone" column="phone"/>
    <result property="email" column="email"/>
    <result property="gender" column="gender"
            typeHandler="cn.edu.cqut.chat.common.typehandler.GenderTypeHandler"/>
    <result property="idNumber" column="id_number"/>
    <result property="nickName" column="nick_name"/>
    <result property="roleType" column="role_type"
            typeHandler="cn.edu.cqut.chat.common.typehandler.RoleTypeHandler"/>
  </resultMap>

  <delete id="delete">
    delete
    from t_user
    where id = #{id}
  </delete>

  <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into t_user (create_time,
                        last_modified_time,
                        remark,
                        account,
                        password,
                        phone,
                        email,
                        gender,
                        id_number,
                        nick_name,
                        role_type)
    values (#{createTime},
            #{lastModifiedTime},
            #{remark},
            #{account},
            #{password},
            #{phone},
            #{email},
            #{gender, typeHandler = cn.edu.cqut.chat.common.typehandler.GenderTypeHandler},
            #{idNumber},
            #{nickName},
            #{roleType, typeHandler = cn.edu.cqut.chat.common.typehandler.RoleTypeHandler})
  </insert>

  <update id="update">
    update t_user
    set create_time        = #{createTime},
        last_modified_time = #{lastModifiedTime},
        remark             = #{remark},
        account            = #{account},
        password           = #{password},
        phone              = #{phone},
        email              = #{email},
        gender             = #{gender, typeHandler = cn.edu.cqut.chat.common.typehandler.GenderTypeHandler},
        id_number          = #{idNumber},
        nick_name          = #{nickName},
        role_type          = #{roleType, typeHandler = cn.edu.cqut.chat.common.typehandler.RoleTypeHandler}
    where id = #{id}
  </update>

  <select id="queryById" resultMap="userMap">
    select *
    from t_user
    where id = #{id}
  </select>

  <select id="queryAll" resultMap="userMap">
    select * from t_user a
    <if test="entity != null">
      <where>
        <if test="entity.account != null and entity.account != ''">
          and a.account = #{entity.account}
        </if>
        <if test="entity.phone != null and entity.phone != ''">
          and a.phone like concat('%', #{entity.phone}, '%')
        </if>
        <if test="entity.email != null and entity.email != ''">
          and a.email like concat('%', #{entity.email}, '%')
        </if>
        <if test="entity.idNumber != null and entity.idNumber != ''">
          and a.id_number like concat('%', #{entity.idNumber}, '%')
        </if>
        <if test="entity.nickName != null and entity.nickName != ''">
          and a.nick_name like concat('%', #{entity.nickName}, '%')
        </if>
        <if test="entity.gender != null">
          and a.gender = #{entity.gender.index}
        </if>
        <if test="entity.roleType != null">
          and a.role_type = #{entity.roleType.index}
        </if>
      </where>
    </if>
  </select>
</mapper>